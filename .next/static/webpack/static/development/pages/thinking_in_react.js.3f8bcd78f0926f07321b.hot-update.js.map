{"version":3,"file":"static/webpack/static\\development\\pages\\thinking_in_react.js.3f8bcd78f0926f07321b.hot-update.js","sources":["webpack:///./pages/thinking_in_react.js"],"sourcesContent":["/* eslint-disable object-curly-spacing */\r\n/* eslint-disable object-curly-newline */\r\nimport React, { useState, Fragment } from 'react';\r\n\r\nconst ProductCategoryRow = ({category}) => {\r\n  console.log(category);\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        카테고리목록\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst ProductRow = () => {\r\n  console.log('ProductRow');\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        제품목록\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nconst ProductTable = (props) => {\r\n  // console.log(props);\r\n  const { filterText, inStockOnly, products } = props;\r\n  const rows = [];\r\n  let lastCategory = null;\r\n\r\n  products.forEach((product) => {\r\n    if (product.name.indexOf(filterText) === -1) {\r\n      return;\r\n    }\r\n    if (inStockOnly && !product.stocked) {\r\n      return;\r\n    }\r\n    if (product.category !== lastCategory) {\r\n      rows.push(\r\n        <ProductCategoryRow key={products.category} category={products.category} />,\r\n      );\r\n    }\r\n    rows.push(\r\n      <ProductRow />,\r\n    );\r\n    lastCategory = product.category;\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{rows}</tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst SearchBar = (props) => {\r\n  console.log('SearchBar');\r\n  const { filterText, inStockOnly, onFilterTextChange, onInStockChange} = props;\r\n  const handleFilterTextChange = (e) => {\r\n    onFilterTextChange(e.target.value);\r\n  };\r\n  const handleInStockChange = (e) => {\r\n    onInStockChange(e.target.checked);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <form action=\"\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"search....\"\r\n          value={filterText}\r\n          onChange={handleFilterTextChange}\r\n        />\r\n        <p>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={inStockOnly}\r\n            onChange={handleInStockChange}\r\n          />\r\n          {' '}\r\n          only show products in stock\r\n        </p>\r\n\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst FilterableProductTable = () => {\r\n  const PRODUCTS = [\r\n    { category: 'Sporting Goods', price: '$49.99', stocked: true, name: 'Football'},\r\n    { category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball'},\r\n    { category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball'},\r\n    { category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch'},\r\n    { category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5'},\r\n    { category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7'},\r\n  ];\r\n\r\n  console.log(PRODUCTS);\r\n\r\n  const [filterText, setFilterText] = useState('');\r\n  const [inStockOnly, setInStockOnly] = useState(false);\r\n  const handleFilterTextChange = (_filterText) => {\r\n    setFilterText(_filterText);\r\n  };\r\n  const handleInStockChange = (_inStockOnly) => {\r\n    setInStockOnly(_inStockOnly);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <SearchBar\r\n        filterText={filterText}\r\n        inStockOnly={inStockOnly}\r\n        onFilterTextChange={handleFilterTextChange}\r\n        onInStockChange={handleInStockChange}\r\n      />\r\n      <ProductTable\r\n        products={PRODUCTS}\r\n        filterText={filterText}\r\n        inStockOnly={inStockOnly}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FilterableProductTable;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAXA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAaA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}