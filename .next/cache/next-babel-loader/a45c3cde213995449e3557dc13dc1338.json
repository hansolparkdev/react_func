{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\futuresoft00\\\\Desktop\\\\react_func\\\\pages\\\\conditional_render.js\";\nvar __jsx = React.createElement;\nimport React, { Fragment, useState } from 'react';\n\nconst ConditionalRender = () => {\n  console.log('Conditional Rendering Test');\n  const {\n    0: isLoggedIn,\n    1: setIsLoggedIn\n  } = useState(false);\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"\\uC870\\uAC74\\uBD80 \\uB80C\\uB354\\uB9C1\"), isLoggedIn === false ? __jsx(\"button\", {\n    type: \"button\",\n    onClick: () => setIsLoggedIn(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, \"\\uB85C\\uADF8\\uC778\") : __jsx(\"button\", {\n    type: \"button\",\n    onClick: () => setIsLoggedIn(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"\\uB85C\\uADF8\\uC544\\uC6C3\"));\n};\n\nexport default ConditionalRender;","map":{"version":3,"sources":["C:/Users/futuresoft00/Desktop/react_func/pages/conditional_render.js"],"names":["React","Fragment","useState","ConditionalRender","console","log","isLoggedIn","setIsLoggedIn"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BL,QAAQ,CAAC,KAAD,CAA5C;AACA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADF,EAGII,UAAU,KAAK,KAAf,GACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,IAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,GAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMA,aAAa,CAAC,KAAD,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCALR,CADF;AAUD,CAbD;;AAeA,eAAeJ,iBAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\r\n\r\nconst ConditionalRender = () => {\r\n  console.log('Conditional Rendering Test');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  return (\r\n    <Fragment>\r\n      <div>조건부 렌더링</div>\r\n      {\r\n        isLoggedIn === false\r\n          ? <button type=\"button\" onClick={() => setIsLoggedIn(true)}>로그인</button>\r\n          : <button type=\"button\" onClick={() => setIsLoggedIn(false)}>로그아웃</button>\r\n      }\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ConditionalRender;\r\n"]},"metadata":{},"sourceType":"module"}